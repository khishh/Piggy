# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Book {
  id: Int!
  title: String!
  author: String!
  publisher: String!
}

input BookInput{
  title: String!
  author: String!
  publisher: String!
}

type User {
  id: Int!
  email: String!
  last_name: String!
  first_name: String!
  picture: String
  sub: String!
}

input UserInput {
  email: String!
  last_name: String!
  first_name: String!
  picture: String
  sub: String!
}

type Item {
  id: String!
  user_sub: String!
  access_token: String!
  request_id: String!
  last_cursor: String
}

input ItemInput {
  id: String!
  user_sub: String!
  access_token: String!
  request_id: String!
}

type Account {
  id: String!
  item_id: String!
  name: String
  official_name: String
  sub_type: String!
  type: String!
}

input AccountInput {
  id: String!
  item_id: String!
  name: String
  official_name: String
  sub_type: String!
  type: String!
}

type Transaction {
  id: String!
  account_id: String!
  amount: Float!
  authorized_date: String
  category: [String]!
  date: String!
  iso_currency_code: String!
  location: Location
}

input TransactionInput {
  id: String!
  account_id: String!
  amount: Float!
  authorized_date: String
  category: [String]!
  date: String!
  iso_currency_code: String!
  location: LocationInput
}

type Location {
  address: String
  city: String
  country: String
  postal_code: String
  region: String
}

input LocationInput {
  address: String
  city: String
  country: String
  postal_code: String
  region: String
}

type Mutation{
  CreateBook(input: BookInput!): Book!
  DeleteBook(id: Int!): String!
  UpdateBook(id: Int!, input: BookInput!): String!

  CreateUserOnSignIn(input: UserInput!): User!
  UpdateUserWithAccessToken(id: String!, access_token: String!): User!

  CreateItem(input: ItemInput!): Item!
}

type Query{
  GetAllBooks: [Book!]!
  GetOneBook(id: Int!): Book! 

  GetOneUser(id: String!): User!

  GetOneItem(id: String!): Item!
  GetAllItemOfOneUser(subid: String!): [Item]!
}
